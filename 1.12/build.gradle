buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.0.9'
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'


ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
group = "walrus"
archivesBaseName = "Walrus"


/*task outputVersionToFile {
	def versionFile = new File("version.txt")
	versionFile.write("${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}")
	
	def oldVersion = new File("versionOld.txt")
	if(!oldVersion.exists()) {
		oldVersion.write("0.0.0")
	}
}*/
//build.dependsOn outputVersionToFile


sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

logger.lifecycle "$archivesBaseName-$version"
logger.lifecycle "" + version

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
    runDir = "../../MinecraftDebug/run_client"
	mappings = "${config.version.mappings}"
	
	replace '@VERSION@', "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
}
	
repositories {
    
	maven {
		name 'prog'
		url "http://dvs1.progwml6.com/files/maven"
	}
	
	maven {
        name 'amadornes'
        url "http://maven.amadornes.com/"
    }

	maven {
		name = "tehnut"
		url = "http://tehnut.info/maven"
	}
	

	maven {
        name = 'IGW'
        url = "http://maven.k-4u.nl/"
    }

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
	
	deobfProvided "mezz.jei:jei_${config.version.minecraft}:${config.version.jei}:api"
	runtime "mezz.jei:jei_${config.version.minecraft}:${config.version.jei}"
	
	//deobfCompile "MCMultiPart2:MCMultiPart:${config.version.mcmp}"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}", 'mcversion': project.minecraft.version
    }
}

task apiJar(type: Jar) {
    from sourceSets.main.output
    //from sourceSets.main.scala
    from sourceSets.main.java
    classifier = 'api'
	include 'walrus/api/**'
}

artifacts {
    archives apiJar
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}
